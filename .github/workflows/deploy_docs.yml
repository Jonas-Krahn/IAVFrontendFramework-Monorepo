name: Deploy Docs on Release

on:
  push:
    branches:
      - main
  release:
    types: [ published ]
    branches:
      - main

permissions:
  contents: write

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"

      - name: Get package version and name
        id: version
        run: |
          NAME=$(node -p "require('./package.json').name")
          echo "PACKAGE_NAME=$NAME" >> $GITHUB_ENV
          VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "PACKAGE_DOCS_FOLDER=$NAME_$VERSION" >> $GITHUB_ENV

      - name: Switch to gh-pages branch
        run: |
          git fetch origin
          # Check if gh pages branch exists
          if git rev-parse --verify origin/gh-pages; then
            git checkout gh-pages
          else
            # Create and initialize gh pages branch if it does not exist
            # (Only for new repositories)
            git checkout --orphan gh-pages
            git rm -rf .
            echo "Initialized gh-pages branch" > README.md
            git add README.md
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages
          fi

      - name: Remove existing version folder if it exists
        run: |
          # Remove existing docs for this version (for overwriting).
          if [ -d "$PACKAGE_DOCS_FOLDER" ]; then
            rm -rf $PACKAGE_DOCS_FOLDER
            echo "Deleted existing folder for version $PACKAGE_DOCS_FOLDER"
          fi

      - name: Create a new version folder in gh-pages
        run: |
          mkdir -p $PACKAGE_DOCS_FOLDER
          git add $PACKAGE_DOCS_FOLDER

      - name: Copy /docs content to version folder
        run: |
          # Add docs for current version to the docs version folder
          git checkout main -- docs/
          cp -r docs/* $PACKAGE_DOCS_FOLDER/
          git add $PACKAGE_DOCS_FOLDER

      - name: Remove docs folder content only if not empty
        run: |
          # As the docs were copied to the docs version folder
          # docs should be empty at the gh pages branch
          if [ -n "$(ls -A docs/ 2>/dev/null)" ]; then
            rm -rf docs/*
            git add docs/
            echo "Removed old docs content"
          fi

      - name: Commit and push changes
        run: |
          git commit -m "Deploy docs for version $PACKAGE_DOCS_FOLDER" || echo "No changes to commit"
          git push origin gh-pages
